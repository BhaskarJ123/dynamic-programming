import java.util.* ;
import java.io.*; 
public class Solution {
    public static int findWays(int num[], int tar) {
//         int[] dp = new int[tar+1];
        int res = helper(num,tar);
        return res;
    }
//     static int helper(int[] num,int tar,int[] dp){
//         if(tar<0)
//             return 0;
//         if(tar == 0)
//             return 1;
//         if(dp[tar]!=0)
//             return dp[tar];
//         int res = 0;
//         for(int i=0;i<num.length;i++){
//             int cnt = helper(num,tar-num[i],dp);
//             res += cnt;
//         }
//         dp[tar] = res;
//         return res;
//     }
    static int helper(int[] num,int tar){
        int[] dp = new int[tar+1];
        dp[0] = 1;
        for(int i=1;i<dp.length;i++){
            for(int j=0;j<num.length;j++){
                if((i-num[j])>=0)
                  dp[i] += dp[i-num[j]];
            }
        }
        return dp[tar];
    }
}