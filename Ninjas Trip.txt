public class Solution {
	public static int minimumCoins(int n, int[] days, int[] cost) {
        int[] dp = new int[n+1];
        int res = helper(n,days,cost,0,dp);
        return res;
	}
    static int helper(int n,int[] days,int[] cost,int idx,int[] dp){
        if(idx>=n)
            return 0;
        if(dp[idx]!=0)
            return dp[idx];
        int i;
        int val1 = cost[0] + helper(n,days,cost,idx+1,dp);
        for(i=idx;i<n && days[i]<=days[idx]+6;i++);
        int val2 = cost[1] + helper(n,days,cost,i,dp);
        for(i=idx;i<n && days[i]<=days[idx]+29;i++);
        int val3 = cost[2] + helper(n,days,cost,i,dp);
        int res = Math.min(val1,Math.min(val2,val3));
        dp[idx] = res;
        return res;   
    }
}
